@page "/elementTypes"
@rendermode InteractiveAuto
@using INTUS.SalesManager.Common.Models

<h3>Element Types</h3>

@if (elementTypes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="d-flex flex-row-reverse">
        <button class="btn @(modifyMode ? "btn-secondary" : "btn-primary")" @onclick="() => SetModifyMode()">Modify</button>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Text</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var elementType in elementTypes)
            {
                <tr>
                    <td>@elementType.Id</td>
                    <td>@elementType.Text</td>
                    <td><button class="btn btn-danger" @onclick="() => Delete(elementType)">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
    @if (modifyMode)
    {
        <div class="form-group">
            <label for="id">Id</label>
            <input type="number" class="form-control" id="id" aria-describedby="Help" placeholder="Enter id" @bind-value=modifyModel.Id>
            <small id="idHelp" class="form-text text-muted">Put 0 for adding and existing Id for updating.</small>
        </div>
        <div class="form-group">
            <label for="text">Text</label>
            <input type="text" class="form-control" id="text" placeholder="Element Type" @bind-value=modifyModel.Text>
        </div>
        <button type="button" class="btn btn-primary" @onclick="() => Submit()">Submit</button>
    }
}

@code {
    private List<LookupDto> elementTypes;
    private bool modifyMode = false;
    private LookupDto modifyModel;

    protected override async Task OnInitializedAsync()
    {
        elementTypes = await HttpClient.GetFromJsonAsync<List<LookupDto>>("/api/v1/lookups/elementTypes");
    }

    private void SetModifyMode()
    {
        modifyMode = true;
        modifyModel = new();
        StateHasChanged();
    }

    private async Task Submit()
    {
        var response = modifyModel.Id == default
            ? await HttpClient.PostAsJsonAsync("/api/v1/lookups/elementTypes", modifyModel)
            : await HttpClient.PutAsJsonAsync("/api/v1/lookups/elementTypes", modifyModel);

        if (response.IsSuccessStatusCode)
        {
            modifyMode = false;
            elementTypes = await HttpClient.GetFromJsonAsync<List<LookupDto>>("/api/v1/lookups/elementTypes");
            StateHasChanged();
        }
    }

    private async Task Delete(LookupDto dto)
    {
        var response = await HttpClient.DeleteAsync($"/api/v1/lookups/elementTypes/{dto.Id}");

        if (response.IsSuccessStatusCode)
        {
            elementTypes = await HttpClient.GetFromJsonAsync<List<LookupDto>>("/api/v1/lookups/elementTypes");
            StateHasChanged();
        }
    }
}
